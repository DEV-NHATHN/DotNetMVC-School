@model AppUser

@using AppMVC.Menu
@inject AdminSidebarService _AdminSidebarService

@{
    ViewData["Title"] = "Student";
}

@{
    var createdBy = @Model.CreatedBy;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Details</title>
</head>
<body>
    <div>
        <h4>Student</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.UserName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.UserName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.FullName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.FullName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Email)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Email)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.BirthDate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.BirthDate)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.HomeAddress)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.HomeAddress)
            </dd>
            <dt class="col-sm-2">
                Trường
            </dt>
            <dd class="col-sm-10">
                @* @Html.DisplayFor(model => model.SchoolId) *@
                <span id="schoolName">

                </span>
            </dd>

            <dt class="col-sm-2">
                Khoa
            </dt>
            <dd class="col-sm-10">
                @* @Html.DisplayFor(model => model.DepartmentId) *@
                <span id="departmentName">

                </span>
            </dd>

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Class)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Class.Name)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.CreatedDate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.CreatedDate)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.CreatedBy)
            </dt>
            <dd class="col-sm-10">
                @* @Html.DisplayFor(model => model.CreatedBy) *@
                <span id="createdBy">
                </span>
            </dd>
        </dl>
    </div>
    <div>
        <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
        <a asp-action="Index">Back to List</a>
    </div>

    <script>
        async function getSchoolName(schoolId) {
            fetch(`https://localhost:3000/admin/school-management/school/GetNameBySchoolId?schoolId=${schoolId}`)
                .then(response => response.json())
                .then(data => {
                    const dataDiv = document.getElementById('schoolName');
                    dataDiv.innerHTML = `<span>${data}</span>`;
                })
                .catch(error => console.error(error));
        }
        getSchoolName(@Model.SchoolId);

        async function getDepartmentName(departmentId) {
            fetch(`https://localhost:3000/admin/school-management/department/GetNameByDepartmentId?departmentId=${departmentId}`)
                .then(response => response.json())
                .then(data => {
                    const dataDiv = document.getElementById('departmentName');
                    dataDiv.innerHTML = `<span>${data}</span>`;
                })
                .catch(error => console.error(error));
        }

        getDepartmentName(@Model.DepartmentId);

        async function getCreatedBy(createdBy) {
            fetch(`https://localhost:3000/admin/school-management/student/GetNameByUserId?userId=${createdBy}`)
                .then(response => response.json())
                .then(data => {
                    const dataDiv = document.getElementById('createdBy');
                    dataDiv.innerHTML = `<span>${data}</span>`;
                })
                .catch(error => console.error(error));
        }

        getCreatedBy(`@createdBy`);
    </script>
</body>
</html>

@{
    _AdminSidebarService.SetActive("Student", "Detail", "SchoolManagement");
}

@section Sidebar
    {
    @Html.Raw(_AdminSidebarService.renderHtml())
}